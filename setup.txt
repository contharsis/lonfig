install linux (debian 11.5)

-------------------------------------------------------------------------
download

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
desktop environment

filename "debian-live-<version>-amd64-xfce+nonfree.iso"
https://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current-live/amd64/iso-hybrid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
server (headless)

filename "debian-live-<version>-amd64-standard+nonfree.iso"
https://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current-live/amd64/iso-hybrid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
setup

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create bootable usb and install debian

put usb in, size must be atleast 8 gigabytes
~~~~~~~~~~~~~~~~
linux

lsblk
sudo umount /dev/sda?*
sudo fdisk /dev/sda
delete all partitions, create new gpt partition table, write and exit
cd ~/Downloads
sudo dd if=linux.iso of=/dev/sda bs=4M status=progress  
~~~~~~~~~~~~~~~~
windows

download rufus
https://rufus.ie/
open it
Device, pick usb
Boot selection, pick linux.iso file
click Start
~~~~~~~~~~~~~~~~

restart, boot into usb, select "Debian Graphical Installer", install and boot into debian	
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
change session

while in login menu click first top right icon, pick "Xfce Session"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
add user to sudoers

whoami, your username
su
sudo visudo
under "# User privilege specification" add
"<username> ALL=(ALL:ALL) ALL"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
remove flash drive

lsblk
sudo eject /dev/sda
physically remove the flash drive
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
install text editor and terminal tab completion, enable contrib and non-free repositories, add 32-bit support and update system

sudo apt install vim bash-completion

sudo vim /etc/apt/sources.list, add
"contrib non-free" after "deb http://deb.debian.org/debian/ bullseye main" and "deb-src http://deb.debian.org/debian/ bullseye main"

it should be like this
"
deb http://deb.debian.org/debian/ bullseye main contrib non-free
deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
"

sudo dpkg --add-architecture i386
sudo apt update
sudo apt upgrade
sudo apt autoremove
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
graphic drivers

https://wiki.debian.org/GraphicsCard
~~~~~~~~~~~~~~~~
amd
https://wiki.debian.org/AtiHowTo

lspci -nn | egrep -i "3d|display|vga", some output should be similar to
"01:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Barts PRO [Radeon HD 6850] [1002:6739]"

sudo apt install firmware-amd-graphics libgl1-mesa-dri libglx-mesa0 mesa-vulkan-drivers xserver-xorg-video-all libglx-mesa0:i386 mesa-vulkan-drivers:i386 libgl1-mesa-dri:i386
sudo reboot

usage check
sudo apt install radeontop
sudo radeontop

manage gpu fans
sudo pip3 install amdgpu-fan
sudo vim /etc/amdgpu-fan.yml, add
"
speed_matrix:  # -[temp(*C), speed(0-100%)]
- [0, 0]
- [30, 15]
- [50, 30]
- [70, 70]
- [90, 100]
"

sudo vim /etc/systemd/system/amdgpu-fan.service, add
"
[Unit]
Description=Service for controling amdgpu fan.
After=syslog.service

[Service]
Type=simple
User=root
ExecStart=/usr/local/bin/amdgpu-fan
Restart=always

[Install]
WantedBy=multi-user.target
"

sudo systemctl daemon-reload
sudo systemctl enable amdgpu-fan.service
sudo reboot
~~~~~~~~~~~~~~~~
nvidia
https://wiki.debian.org/NvidiaGraphicsDrivers

lspci -nn | egrep -i "3d|display|vga", some output should be similar to
"07:00.0 VGA compatible controller [0300]: NVIDIA Corporation GM206 [GeForce GTX 960] [10de:1401] (rev a1)"

sudo apt install linux-headers-amd64 nvidia-driver firmware-misc-nonfree nvidia-driver-libs:i386
sudo reboot

detect gpu and list gpu drivers
sudo apt install nvidia-detect
nvidia-detect

gpu info
sudo apt install nvidia-smi
nvidia-smi
~~~~~~~~~~~~~~~~
mesa-utils
https://wiki.debian.org/Mesa#Testingperformance

sudo apt install mesa-utils

check your gpu
glxinfo | grep OpenGL, some output should be similar to
"
OpenGL vendor string: Intel Open Source Technology Center # The manufacturer
OpenGL renderer string: Mesa DRI Intel(R) Haswell Desktop  # The type of the chip
OpenGL core profile version string: 3.3 (Core Profile) Mesa 10.3.2 # The OpenGL version fully supported, here 3.3 thanks to Mesa 10.3.2 .
OpenGL core profile shading language version string: 3.30 # The GLSL version fully supported
"

glxinfo  | grep rendering, output should be
"direct rendering: Yes"

test how many frames your video card is putting out
glxgears -info
~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check if any processes failed

systemctl --failed, output should be
"
  UNIT LOAD ACTIVE SUB DESCRIPTION
0 loaded units listed.
"

systemctl is-system-running
output should be "running"

if there are active / sub failed, check problems section, fix them
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
add devices to fstab

lsblk
sudo fdisk /dev/sda, create new gpt partition table, create new partition save and exit
sudo mkfs.ext4 /dev/sda1

sudo blkid, find uuid of partition /dev/sda1
sudo mkdir /media/storage
sudo vim /etc/fstab, add
"UUID=<uuid of partition /dev/sda1> <mount point, /media/storage> <type of device, ext4> defaults 0 2"

sudo systemctl daemon-reload
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
edit system

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit window manager

change application finder shortcut
alt + f3
Keyboard
Application Shortcuts

edit terminal launch shortcut
double-click "exo-open --launch TerminalEmulator", set to "alt + d"

edit firefox launch shortcut, delete other shortcut
double-click "exo-open --launch WebBrowser", one with "WWW" as shortcut, set to "alt + a"
click "exo-open --launch WebBrowser", one with "HomePage" as shortcut, click "Remove"

edit thunar launch shortcut, delete other shortcut
double-click "thunar", one with "super + e" as shortcut, set to "alt + e"
click "thunar", one with "Alt + F3" as shortcut, click "Remove"

edit application finder
double-click "xfce4-appfinder", set to "super l"

edit session logout shortcut
double-click "xfce4-session-logout", set to "alt + x"

add mousepad launch shortcut
click "Add", set "Command" to "mousepad", click "OK", set to "alt + w"

Layout
click "Add", add your language
"Change layout option", pick combination to change your language
check "Use system defaults" then uncheck it (you need to do this otherwise changing language doesn't work, this is a bug and should be checked if it's fixed)

remove title bar and borders from windows
sudo mkdir -p /usr/share/themes/Null/xfwm4
sudo touch /usr/share/themes/Null/xfwm4/themerc
super
Window Manager
Style, Theme, pick "Null"

change window closing shortcut
Keyboard
double-click "Close window", set to "alt + q"

change toggle fullscreen shortcut
double-click "Maximize window", set to "alt + f"

change hide window shortcut
double-click "Hide window", set to "alt + z"

disable frame around selected windows, center all windows, disable dimming on unfocused windows
super
Window Manager Tweaks
Cycling, uncheck "Draw frame around selected window while cycling"
Placement, "Minimum size of windows to trigger smart placement", set to "Large"
Compositor, uncheck "Enable display compositing"

disable workspaces
super
Workspaces, General, Layout, "Number of workspaces", set to 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit desktop environment

edit appearance
super
Appearance
Style, pick "Adwaita-dark"
Icons, pick "Adwaita - The Only One"
Settings, uncheck "Show images on buttons", "Show images in menus"

edit desktop and icons
super
Desktop
Background
Style, pick "None"
Color, pick "Solid color"
click color box, pick the color black from bottom right, click "Select"
Menus
Desktop Menu, uncheck "Show application icons in menu"
Window List Menu, uncheck "Show window list menu on desktop middle click"
Icons
check "Show icons on primary display"
Default Icons
uncheck all

edit grub
alt + e
take picture of folder background
sudo apt install gimp
super

create background images or get them from backgrounds folder
GNU Image Manipulation Program
create black image with dimensions 1920x1080, name it black_bg.png, save it in ~/Desktop
open folder, use "print screen" button
Region to capture, pick "Select a region", pick background of folder and save image it to clipboard, paste it in gimp and color pick it 
create new image with dimensions 1920x1080 with that color and name it gray_bg.png, save it in ~/Desktop
sudo mv ~/Desktop/black_bg.png ~/Desktop/gray_bg.png /usr/share/pixmaps

sudo vim /etc/default/grub

to remove initial splash screen
remove "splash" from "GRUB_CMDLINE_LINUX_DEFAULT"

if you have only one operating system installed
set "GRUB_TIMEOUT" to 0

Change default splash screen, add
"
# splash screen background
GRUB_BACKGROUND=/usr/share/pixmaps/black_bg.png
"
sudo update-grub
sudo reboot

edit greeter
sudo vim /usr/share/lightdm/lightdm-gtk-greeter.conf.d/01_debian.conf

edit background and theme
"background", set to "#000000"
"theme-name", set to "Adwaita-dark"

to add default user image, add "default-user-image=<path to image>"
to remove it, add "default-user-image=/usr/share/pixmaps/gray_bg.png"

edit default applications
super
Default Applications
Others
"text/plain", "application/x-shellscript", "application/xml" pick "Mousepad"
"image/gif", "image/jpeg", "image/png" pick "Ristretto Image Viewer"

disable program reloading from last session
close all programs
alt + q
uncheck "Save session for future logins", pick "Log Out", log in

super
Mouse and Touchpad
Devices,
for each mouse device
Buttons and Feedback, Pointer Speed
"Acceleration" set to 0.0
you might have to increase your mouse dpi, because it will be quite slower now
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit panels

hide IBus icon
super
IBus Preferences
General, Font and Style, uncheck "Show icon on system tray"

delete panel 2
super
Panel
Panel 2, click minus next to "Panel 2", click "Remove"

edit panel 1
Panel 1, Display, General
"Output", pick "Primary"
uncheck "Lock panel", move panel to bottom, check "Lock panel"
"Automatically hide the panel", pick "Always"
Measurements, "Row size (pixels)", set to 16
Items
double-click "Applications Menu", Appearance, uncheck "Show icons in menu", "Show button title"
double-click "Window Buttons", Appearance, check "Show flat buttons", uncheck "Show handle"
Behaviour, "Middle click action", pick "Close Window"
double-click "Clock"
Time Settings
Timezone, set your timezone
Clock Options, set to hour and minutes last option
click "Workspace Switcher", "Notification Plugin", "Action Buttons", click "Remove", click "Remove"
if you are not on battery, click "Power Manager Plugin", click "Remove", click "Remove"
click on all separators, except one after "Window Buttons" with "Expand" turned on, click "Remove", click "Remove"

edit applications menu
sudo vim /etc/xdg/menus/xfce-applications.menu, after
"
<Include>
     <Category>X-Xfce-Toplevel</Category>
</Include>
"

add
"
<Exclude>
     <Filename>xfce4-mail-reader.desktop</Filename>
</Exclude>
"

remove all "<Separator/>" tags

edit sound
move mouse to bottom right of taskbar
click sound plugin
set everything to "100%"

edit notifications
super
Notifications
General
Appearance, "Opacity", set to "100%"
Animations, uncheck "Fade out"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit displays

super
Display
General
arrange displays
check "Primary Display" for the main display
click "Keep this configuration"
"Refresh rate", pick max value for all displays
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
turn off sleep

super
Power Manager, Display
uncheck "Display power management"
"Blank after", set to "Never"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
terminal

alt + d
Edit
Preferences...
General
Scrolling
"Scrollbar is", pick "Disabled"
check "Unlimited scrollback"
Cursor, "Cursor shape", pick "Underline"
Clipboard, uncheck "Show unsafe paste dialog"
Appearance
Background, check None (use solid color)
Opening New Windows, uncheck "Display menubar in new windows"
alt + d
alt + q
check "Do not ask me again", click "Close Window"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
thunar

alt + e
View
uncheck "Menubar"
click "<username>" on side pane
right-click "Downloads"
pick "Send To", pick "Side Pane (Create Shortcut)"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mousepad

alt + w
Edit, Preferences, Window, General, uncheck "Remember window state"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ristretto image viewer

super
Ristretto Image Viewer
Edit
Preferences...
Behaviour
Startup, uncheck "Maximize window on startup when opening an image"
View, uncheck "Show Thumbnail Bar"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
firefox

Settings

General
Tabs
uncheck "Confirm before quitting with Ctrl + Q"

Files and Applications
Digital Rights Management (DRM) Content
check "Play DRM-controlled content"

Browsing
check "Use autoscrolling"
uncheck "Enable picture-in-picture video controls"

Home
Firefox Home Content
uncheck "Shortcuts"

Search
Search Suggestions
check "Show search suggestions in address bar results"
uncheck "Show search suggestions ahead of browsing history in address bar results"

Search Shortcuts
uncheck all

Privacy & Security
Logins and Passwords
uncheck "Ask to save logins and passwords for websites"

History
"Firefox will", pick "Use custom settings for history"
uncheck "Remember browsing and download history"
uncheck "Remember search and form history"
check "Clear history when Firefox closes"
click "Settings..."
uncheck "Cookies"
click "OK"

Address Bar
uncheck all

about:config
uncheck "Warn me when I attempt to access these preferences"
click "Accept the Risk and Continue"
"browser.compactmode.show", set to "true"

right-click toolbar
Customize Toolbar...
edit things
Density, pick "Compact (not supported)"

edit bookmarks
open new tab, right-click on bookmark toolbar, click "Manage Bookmarks"
Bookmarks Toolbar, delete "Getting Started"
Bookmarks Menu, delete "Mozilla Firefox" folder

add extensions
search extensions firefox in the search engine or go to
https://addons.mozilla.org/en-US/firefox
add extensions, for each click "Add", then check "Allow this extension to run in Private Windows", then click "Okay"

uBlock Origin - efficient wide-spectrum content blocker
https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/
open it, Open the dashboard, Settings, uncheck "Show the number of blocked requests on the icon"

Dark Reader - dark mode for every website
https://addons.mozilla.org/en-US/firefox/addon/darkreader/

Unhook - hide youtube sections
https://addons.mozilla.org/en-US/firefox/addon/youtube-recommended-videos/
open it, change to dark mode and turn it on with top right buttons
uncheck "Hide Playlist"
check "Hide Mixes"
check "Hide Left Sidebar Extra"
check "Hide Explore"
check "Trending"

Vimium-FF - shortcuts on pages and more
https://addons.mozilla.org/en-US/firefox/addon/vimium-ff/
check "Hide Shorts Tab"

Video Resumer - resumes Youtube videos from where you played them last
https://addons.mozilla.org/en-US/firefox/addon/video-resumer/
open Settings
Extensions & Themes
Extensions
click "Video Resumer"
Preferences
"Do not memorize position if only this many seconds left on the video", set to 1
"Forget videos older than this many days", set to 365

MuteLinks - mute tabs based on URL
https://addons.mozilla.org/en-US/firefox/addon/mutelinks/
when you have opened the tab you want to mute, right-click on it
hover "Mutelinks"
click "Add/edit entry to Blacklist", you can remove quotes if you want, click "Add to Blacklist"

Privacy & Security
Cookies and Site Data
click "Clear Data..."
click "Clear"

History
click "Clear History..."
Clear All History
"Time range to clear", pick "Everything"
check "Site settings", "Offline website data"
click "OK"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
programs

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tools

install with
sudo apt install <tool>, follow instructions to install/configure in the tools section if necessary

essential
bash-completion - extend bash's standard completion
vim - text editor
build-essential - building and compiling tools
git - content tracker
openssh-client - ssh client
openssh-server - ssh server
unar - operate with rar archives
zstd - operate with zstd archives
zpaq - operate with zpaq archives
pmount - automatic mount as user
curl - transfer a URL
wget - non-interactive network downloader
net-tools - configure network interfaces
gimp - graphical editor
xclip - command line interface to X selections
inxi - system information script
redshift - display color temperature adjuster
software-properties-common - manage repositories

user standard
htop - interactive process viewer
vlc - media player
qbittorrent - fast bittorent client, desktop app
qbittorrent-nox - fast bittorrent client, run as a server with webui
aria2 - fast download from anywhere and anything
wakeonlan - turn on devices on local network, install on clients
python3-pip - package manager for python
qemu/libvirt - manage virtual machines locally or remotely 
ca-certificates - certificate authorities
lutris - download and manage games and their runners (native, steam, wine)
openrazer-meta - drivers for razer devices
polychromatic - gui app to control razer devices

deprecated
virtualbox - manage virtual machines
skypeforlinux - text messages and video chat
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ssh server

on server
sudo apt install openssh-server
whoami, your username
go to your default gateway, usually "192.168.0.1"
find your public ip
open dhcp server
find mac address of machine with ssh server
create address reservation for it with mac address
open nat forwarding, port forwarding, or whoever it's named in your router
add forward with parameters
external port - port from range of 0 - 65535
internal ip - reserved ip of the machine with ssh server
internal port - 22
protocol - all
enable it
reboot router

to connect to server
ssh -p <external port> <username>@<public ip or internal ip> 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
redshift

mkdir -p ~/.config/systemd/user
vim ~/.config/systemd/user/redshift.service, add
"
[Unit]
Description=Display color temperature adjuster
After=graphical.target

[Service]
ExecStart=/usr/bin/redshift -t <day>:<night> -r -l <latitude>:<longitude> -m randr
Restart=always

[Install]
WantedBy=default.target
"

day is your daily temperature, night is your nightly temperature
latitude is the latitude of your location and longitude is the longitude of your location,
they can also be floating point numbers

systemctl --user daemon-reload
systemctl --user enable redshift.service
sudo reboot

add toggle for turning on and off
mkdir ~/.config/redshift
cd ~/.config/redshift
vim toggle.sh, add
"
#!/bin/bash

declare res="$(systemctl --user is-active redshift.service)"

if [ "$res" = "active" ]; then
	systemctl --user stop redshift.service
else
	systemctl --user restart redshift.service
fi
"

chmod +x toggle.sh
sudo ln -s ~/.config/redshift/toggle.sh /usr/local/bin/redshifttoggle
super
Keyboard
Application Shortcuts
click "Add", set "Command" to "redshifttoggle", click "OK", set to "alt + r"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
qbittorrent

change theme to dark
https://gitlab.com/qbittorrent-black-theme/client
cd ~/Downloads
git clone https://gitlab.com/qbittorrent-black-theme/client.git
for the theme to stay in qbittorrent, you mustn't move or delete black.qbtheme after you set it in qbittorrent,
so put the file somewhere in configuration files, for example ~/.config/qBittorrent, this is also the
default qBittorrent config folder

super
qBittorrent
cp client/black.qbtheme ~/.config/qBittorrent
whoami
Tools
Preferences
Behavior
Interface
Use custom UI Theme
"UI Theme file", click folder icon, set it to "/home/<username>/.config/qBittorrent/black.qbtheme"

change tray icon to dark theme
Desktop
"Tray icon style", pick "Monochrome (for dark theme)"

change torrent folder
mkdir ~/torrents
Tools
Preferences...
Downloads
Saving Management
"Default Save Path", set to "/home/<username>/torrents"
restart qbittorrent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
qbittorrent-nox

vim ~/.config/systemd/user/qbittorrent-nox.service, add
"
[Unit]
Description=Qbittorrent-nox server instance
After=graphical.target

[Service]
ExecStart=/usr/bin/qbittorrent-nox
Restart=always

[Install]
WantedBy=default.target
"

systemctl --user daemon-reload
systemctl --user enable qbittorrent-nox.service
sudo reboot

systemctl --user stop qbittorrent-nox.service
systemctl --user status qbittorrent-nox.service, find the url at which the server starts, it should be in
"To control qBittorrent, access the Web UI at <url>"
usually it's http://localhost:8080
find the username and password, they should be in
"The Web UI administrator username is: <username>" and "The Web UI administrator password is still the default one: <password>"
they usually are - username: admin, password: adminadmin

http://localhost:8080
Tools, Options...

Downloads
Saving Management, "Default Save Path", change it if you want
Automatically add torrents from, "Monitored Folder", set to path, and if you add *.torrent files to this path they will start

Connection
Connection Limits, uncheck all

Web UI
Authentication
change username and password
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
github

git config --global init.defaultBranch main
git config --global pull.rebase false
git config --global core.editor vim
use "git config" without "--global" to only set config for the repository you are currently in
set "git config user.name" and "git config user.email" for each repository independently

authentication
~~~~~~~~~~~~~~~~
ssh key

cd ~/.ssh
ssh-keygen -C <email>
set the file in which to save the key to <github username>_rsa
set passphrase to memorable password
eval "$(ssh-agent -s)", check if ssh-agent process is running, otherwise start it
for each ssh key / github account add this to end of file
vim ~/.ssh/config, add
"
Host <github username>
	User git
	Hostname github.com
	AddKeysToAgent yes
	IdentitiesOnly yes
	IdentityFile ~/.ssh/<github username>_rsa
"

https://github.com
Settings
SSH and GPG keys
SSH keys, click "New SSH key"
Title, set it as the purpose of the key
Key type, pick "Authentication Key"
cat ~/.ssh/<github username>_rsa.pub, copy the key
Key, paste the public key in there
click "Add SSH key"

now everytime you boot up your PC and want to use that github account
you will have to enter the passphrase for the key once, then it's stored in the ssh-agent
to check the current stored fingerprints
ssh-add -l
to check the current stored public key parameters
ssh-add -L

to transfer keys from one machine to another, you need to transfer both and set
their permission to 600 for the private and 644 for the public key
chmod 600 <key name>
chmod 644 <key name>.pub
~~~~~~~~~~~~~~~~
personal authentication token

git config --global credential.helper store
https://github.com
Settings
Developer settings
Personal access tokens
click "Generate new token", set it as the purpose of the token
use a git command inside a repository, enter username, paste the token in password field
the credentials will save in ~/.git-credentials in plain text
~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wakeonlan

remote machine
go into bios and turn on "WakeOnLan"
ip link show, find your network interface, find its MAC address
check if wakeonlan is enabled
sudo apt install ethtool
sudo ethtool enp3s0
"Supports Wake-on" should have a "g"
"Wake-on" should be "g"
otherwise
sudo vim /etc/network/interfaces.d/setup
add "ethernet-wol g"
sudo reboot

client
wakeonlan 00:25:22:e8:7d:ba
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
qemu/libvirt, creating virtual machines with kvm

sudo apt install qemu qemu-kvm virt-manager dnsmasq vde2 bridge-utils cpu-checker

sudo virsh net-start default
sudo virsh net-autostart default

whoami, your username
sudo adduser <username> libvirt
sudo adduser <username> libvirt-qemu
sudo systemctl status libvirtd

virt-manager in terminal, or
super
Virtual Machine Manager

Edit, Preferences, General, General, check "Enable XML editing"

when editing a configuration, change a configuration, then without clicking "Apply" go to another one
"There are unapplied changes. Would you like to apply them now?", check "Don't warn me again.", click "Yes"

when deleting a virtual machine, right-click, click "Delete", choose only "*.qcow*" files, click "Delete", check "Don't show this message again", click "OK"

check if kvm is enabled
sudo kvm-ok, output should be like
"
INFO: /dev/kvm exists
KVM acceleration can be used
"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
java
https://www.oracle.com/java/technologies/downloads

download latest version java with product/file description as "x64 Debian Package"
cd ~/Downloads
sudo apt-get install ./jdk-<version>_linux-x64_bin.deb
find directory where your jdk installed
vim ~/.bashrc, add
"
# Java
export JAVA_HOME="/usr/lib/jvm/jdk-<version>"
export PATH="$JAVA_HOME/bin:$PATH"
"

multiple jdks
you will use the jdk installation folder "/usr/lib/jvm" to link the jdks with the environment
if your jdk has deb package, it will install automatically there when you run sudo apt-get install ./<jdk deb package>
if your jdk doesn't have deb package, download the "x64 Compressed Archive" version of the jdk and manually put it inside "/usr/lib/jvm"

cd ~/Downloads
sudo mkdir /usr/local/lib/jvm
sudo tar -xzvf <jdk>.tar.gz -C /usr/local/lib/jvm
sudo rm <jdk>.tar.gz

create link which uses the jdk
sudo ln -s /usr/local/lib/jvm/<jdk>/bin/java /usr/local/bin/java<jdk version>
everytime you want to use that jdks environment, change JAVA_HOME variable to that jdk or type "java8"
export JAVA_HOME="/usr/local/lib/jvm/<jdk>"
export PATH="$JAVA_HOME/bin:$PATH"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wine
https://wiki.winehq.org/Download
https://wiki.winehq.org/Debian

sudo dpkg --add-architecture i386
sudo mkdir -pm755 /etc/apt/keyrings
sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/debian/dists/bullseye/winehq-bullseye.sources
sudo apt update
sudo apt install --install-recommends winehq-stable

uninstalling in wine
wine uninstaller
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
winetricks
https://wiki.winehq.org/Winetricks

install tools that are required to run winetricks
sudo apt install cabextract unzip p7zip curl zenity
alternatives are wget for curl, kdialog for zenity

cd ~/Downloads
wget  https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
chmod +x winetricks
./winetricks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lutris
https://lutris.net/downloads, follow instructions for your distribution, mine is debian

echo "deb http://download.opensuse.org/repositories/home:/strycore/Debian_11/ ./" | sudo tee /etc/apt/sources.list.d/lutris.list
wget -q https://download.opensuse.org/repositories/home:/strycore/Debian_11/Release.key -O- | sudo tee /etc/apt/trusted.gpg.d/lutris.asc -
sudo apt update
sudo apt install lutris
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
openrgb
https://openrgb.org
https://openrgb.org/up_/up_/static/releases/release_0.7/openrgb_0.7_amd64_bullseye_6128731.deb

cd ~/Downloads
sudo apt-get install ./openrgb_0.7_amd64_bullseye_6128731.deb
if you can't install it
sudo add-apt-repository ppa:thopiekar/openrgb
sudo apt update
sudo apt install openrgb
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
corectrl
https://gitlab.com/corectrl/corectrl

dependencies
sudo apt install libdrm-dev gcc cmake libqt5svg5 qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtcharts qml-module-qt-labs-platform libkf5archive5 extra-cmake-modules libqt5quickcontrols2-5 qtdeclarative5-dev libqt5charts5-dev libqt5svg5-dev qttools5-dev qttools5-dev-tools libkf5auth-dev libkf5archive-dev libbotan-2-dev libbotan-2-doc python3-botan qtdeclarative5-dev libqt5charts5-dev libqt5svg5-dev sysvinit-utils hwdata mesa-utils util-linux libquazip5-1 cmake extra-cmake-modules qttools5-dev qtdeclarative5-dev libqt5charts5-dev libqt5svg5-dev libbotan-2-dev libqca-qt5-2-dev libdrm-dev qtbase5-dev libegl1-mesa-dev libegl-dev libquazip5-dev libpolkit-gobject-1-dev libdbus-1-dev

build
https://gitlab.com/corectrl/corectrl/-/wikis/Installation
git clone https://gitlab.com/corectrl/corectrl.git
cd corectrl
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF ..
make

setup
https://gitlab.com/corectrl/corectrl/-/wikis/Setup

autostart
cp /usr/share/applications/org.corectrl.corectrl.desktop ~/.config/autostart/org.corectrl.corectrl.desktop

don't ask for password on start
pkaction --version

version < 0.106
sudo vim /etc/polkit-1/localauthority/50-local.d/90-corectrl.pkla, add
"
[User permissions]
Identity=unix-group:<username>
Action=org.corectrl.*
ResultActive=yes
"

version >= 0.106
sudo vim /etc/polkit-1/rules.d/90-corectrl.rules, add
"
polkit.addRule(function(action, subject) {
    if ((action.id == "org.corectrl.helper.init" ||
         action.id == "org.corectrl.helperkiller.init") &&
        subject.local == true &&
        subject.active == true &&
        subject.isInGroup("<username>")) {
            return polkit.Result.YES;
    }
});
"

full amd gpu controls
add "amdgpu.ppfeaturemask=0xffffffff" to kernel boot parameters
sudo vim /etc/default/grub
add "amdgpu.ppfeaturemask=0xffffffff" to "GRUB_CMDLINE_LINUX_DEFAULT", so it looks like
"GRUB_CMDLINE_LINUX_DEFAULT="amdgpu.ppfeaturemask=0xffffffff""
sudo update-grub
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
steamcmd
https://developer.valvesoftware.com/wiki/SteamCMD

install

sudo useradd -m steam
sudo passwd steam

sudo vim /etc/apt/sources.list, add "contrib non-free" at the end of all debian distribution repositories, so it looks like this
"
deb http://deb.debian.org/debian bullseye main contrib non-free
deb-src http://deb.debian.org/debian bullseye main contrib non-free
 
deb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free
deb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-free
 
deb http://deb.debian.org/debian bullseye-updates main contrib non-free
deb-src http://deb.debian.org/debian bullseye-updates main contrib non-free
"

sudo apt update
sudo apt install software-properties-common lib32gcc-s1 steamcmd

run
steamcmd
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
openrazer-meta

install linux kernel headers which match your kernel version
sudo apt install linux-headers-amd64

sudo gpasswd -a $USER plugdev
sudo reboot

echo 'deb http://download.opensuse.org/repositories/hardware:/razer/Debian_11/ /' | sudo tee /etc/apt/sources.list.d/hardware:razer.list
curl -fsSL https://download.opensuse.org/repositories/hardware:razer/Debian_11/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/hardware_razer.gpg > /dev/null
sudo apt update
sudo apt install openrazer-meta
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
polychromatic

echo "deb [signed-by=/usr/share/keyrings/polychromatic.gpg] http://ppa.launchpad.net/polychromatic/stable/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/polychromatic.list
curl -fsSL 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xc0d54c34d00160459588000e96b9cd7c22e2c8c5' | sudo gpg --dearmour -o /usr/share/keyrings/polychromatic.gpg

sudo apt-get update
sudo apt install polychromatic
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
extra features

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit default kernel in grub

grep submenu /boot/grub/grub.cfg, copy the value of $menuentry_id_option
"gnulinux-advanced-<numbers, letters and dashes>", its name will be advanced_menu
grep gnulinux /boot/grub/grub.cfg, copy the value of $menuentry_id_option
"gnulinux-<kernel version>-amd64-advanced-<numbers, letters and dashes>", its name will be kernel_version

sudo vim /etc/default/grub
set GRUB_DEFAULT="advanced_menu>kernel_version"
it should be similar to "GRUB_DEFAULT="gnulinux-advanced-38ea4a12-6cfe-4ed9-a8b5-036295e62ffc>gnulinux-5.10.0-18-amd64-advanced-swa21lei-de1f-33q0-0965-1pw21a85ea22""
sudo update-grub
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
installing software not from repositories

sudo mkdir /opt/<software>

extract software/set installer location to /opt/<software name>

add application entry
sudo vim /usr/share/applications/<software>.desktop

add to PATH
vim ~/.bashrc, add to end of file
export <SOFTWARE>_HOME="/opt/<software>"
export PATH="$<SOFTWARE>_HOME/<path to binaries or other executables>:$PATH"

if software doesn't work in /opt
mkdir ~/opt
repeat installation steps

add application entry
sudo vim ~/.local/share/applications/<software>.desktop

add to PATH
whoami, your username
vim ~/.bashrc, add to end of file
export <SOFTWARE>_HOME="/home/<username>/<software>"
export PATH="$<SOFTWARE>_HOME/<path to binaries or other executables>:$PATH"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
desktop and search entries for software

sudo vim /usr/share/applications/<software, postman>.desktop, add
"
[Desktop Entry]
Encoding=UTF-8
Exec=/opt/postman/Postman
Icon=/opt/postman/Postman/app/icons/icon_128x128.png
Type=Application
Terminal=false
Comment=API Testing Environment
Name=Postman
GenericName=postman-10.5.2
StartupNotify=false
Categories=Development;REST
"

if software is installed locally
whoami, your username
sudo vim ~/.local/share/applications/<software, postman>.desktop, add
"
[Desktop Entry]
Encoding=UTF-8
Exec=/home/<username>/opt/postman/Postman
Icon=/home/<username>/opt/postman/Postman/app/icons/icon_128x128.png
Type=Application
Terminal=false
Comment=API Testing Environment
Name=Postman
GenericName=postman-10.5.2
StartupNotify=false
Categories=Development;REST
"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build from source (debian repositories)

sudo vim /etc/apt/sources.list
enable source repositories by removing comment from their line, change
"
# deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
# deb-src http://security.debian.org/debian-security bullseye-security main
"

to
"
deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
deb-src http://security.debian.org/debian-security bullseye-security main
"

sudo apt update
sudo apt install devscripts dpkg-dev
sudo apt build-dep <package>

cd ~/Downloads
mkdir <package>_source
cd <package>_source

sudo apt source <package>
cd <folder of source>
edit source files if you want, then go back to top of source folder
edit "debian/rules" to change build steps of package and to also
remove building of packages you won't need

build only binaries, without signing changelog or source code changes
sudo debuild -b -us -uc

cd ..
sudo apt install ./<package>

if you will be debugging the package
sudo apt install ./<package>-dbgsym

apt will try to update <package> to its repository version
here are 2 methods to prevent this
~~~~~~~~~~~~~~~~
1. set priority of remote <package> version to less than 100

sudo vim /etc/apt/preferences, add
"
Package: <package>
Pin: release a=<remote repository>
Pin-Priority: 90
"
~~~~~~~~~~~~~~~~
2. mark <package> with hold

sudo apt-mark hold <package>
~~~~~~~~~~~~~~~~

sudo apt update

if you use method 1, <package> doesn't show up as held back in "sudo apt update" and "sudo apt upgrade"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
add clipboard support to vim

here are 2 methods to do this
~~~~~~~~~~~~~~~~
1. install vim-gtk3

sudo apt install vim-gtk3
~~~~~~~~~~~~~~~~
2. install vim from source with "--with-x" flag enabled

complete instructions from "extra features" section for building from source

edit these source files
sudo vim debian/rules, edit
"NOXFLAGS = --without-x" to "NOXFLAGS = --with-x"
comment out the variants besides the one you will install, I am installing vim
so I will comment the others so it looks like
"
# VARIANTS += vim-tiny
# VARIANTS += vim-gtk3
# VARIANTS += vim-athena
# VARIANTS += vim-nox
VARIANTS += vim-basic
"

sudo remove vim
the package you want to install is vim_<version, 8.2.2434-3>+<debian stable updates version, deb11u1>_<architecture, amd64>.deb
~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create windows 10 virtual machine in qemu/libvirt

download windows 10 iso
download virtio windows 10 drivers
https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md
https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso
super
Virtual Machine Manager
File
New Virtual Machine
Choose how you would like to install the operating system, pick "Local install media (ISO image or CDROM)", click "Forward"
Choose ISO or CDROM install media, click "Browse...", pick windows 10 iso
Choose the operating system you are installing, uncheck "Automatically detect from the installation media / source"
set to windows 10 and pick "Microsoft Windows 10 (win10)", click "Forward"
Choose Memory and CPU settings, Memory, set to atleast 4096 MiB, CPUs, set to at least 4, click "Forward"
pick "Create a disk image for the virtual machine" set to at least 40 GiB, click "Forward"
Ready to begin the installation, check "Customize configuration before install"

XML, delete
"
<timer name="rtc" tickpolicy="catchup"/>
<timer name="pit" tickpolicy="delay"/>
"

set "present" to "yes" in
"<timer name="hpet" present="no"/>", so it looks like "<timer name="hpet" present="yes"/>"
click "Apply"

CPUs
Details
Topology, check "Manually set CPU topology"
"Sockets", set to 1
"Cores", set to half of the CPUs value you did in the 4-th step, if you set to 4 CPUs, then here you would set it to 2
"Threads", set to twice the "Cores"
click "Apply"

SATA Disk 1
Details
Virtual Disk
"Disk bus", pick VirtIO
click "Apply"

NIC <mac address>
Details
Virtual Network Interface
"Device model", pick virtio
click "Apply"

click "Add Hardware"
pick Storage
Details
"Device type", pick "CDROM device"
click "Finish"

SATA CDROM 2
click "Browse", click "Browse Local", pick virtio windows 10 drivers
click "Apply"

click "Begin Installation", do the standard steps
when you get to "Which type of installation do you want?"
pick "Custom: Install Windows only (advanced)", click "Load driver", click "OK"
pick "Red Hat VirtIO SCSI controller (<letter>:\amd64\w10\viostor.inf)", click "Next"
after your disk comes up, don't click "New", click "Next"

start windows 10 instance
Device Manager
search network adapter with yellow triangle (warning)
if it's named something else than "Ethernet Controller" like "Red Hat VirtIO Ethernet Adapter"
right-click it, click "Remove Device", check "Delete drivers"
refresh device manager, now it should appear as "Ethernet Controller"
right-click "Ethernet Controller", click "Update driver"
click "Browse my computer for drivers", click "Browse..."
go to "<letter of virtio windows 10 drivers>:\NetKVM\w10\<your processor architecture, for example amd64>"
click "OK", click "Next", after update the new network device should be something like "Red Hat VirtIO Ethernet Adapter"

after you complete setup successfully, you can remove SATA CDROM hardware from virtual machine
shutdown windows 10
super
Virtual Machine Manager
open windows 10 virtual machine
Show virtual hardware details
delete both SATA CDROM hardware
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
edit files on qemu/libvirt virtual machine through host

sudo apt install libguestfs-tools
find where .qcow2 file is
super
Virtual Machine Manager
open virtual machine, Show virtual hardware details, VirtIO Disk 1, copy "Source path"

list all partitions, mount each one to find which you want to edit
sudo virt-filesystems -a <source path>
sudo guestmount -a <source path> -m /dev/sda<digit from previous command> /mnt
su
ls /mnt
do until you find partition you want to edit
edit it
sudo guestunmount /mnt
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
download games from lutris

if you are downloading game which has launcher like battle net, origin, etc. download the launcher, then download the game
from the launcher

super
Lutris
click + in the top right corner, Search the Lutris website for installers, search your game, click it and follow the instructions
to install game for windows and use "Install a Windows game from media" by giving path to its executable
to add local game use "Add locally installed game" and give path to its executable
add splash art for game

from the site
https://lutris.net/
search your game
click install

lutris search option uses the site to find the instructions to install
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
download steam workshop files

steamcmd
login anonymous

if the game requires authentication
login <username> <password>

https://steamcommunity.com/workshop/
search for game

https://steamcommunity.com/app/<app_id>/workshop/, find app_id
https://steamcommunity.com/sharedfiles/filedetails/?id=<file_id>, find file_id
workshop_download_item <app_id> <file_id>

cd <directory where file is saved, ~/.steam/debian-installation/steamapps/workshop/content/<app_id>/<file_id>/>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
minecraft modpacks

setup

install java 8, 17 and 19, instructions are in programs section

download multimc and install it
https://multimc.org/
super
MultiMC, Settings
Java
set minimum memory to 6 gb and maximum to 10 gb, set java path to jdk
Accounts
Add Microsoft, follow instructions to add account

download ftb app
https://www.feed-the-beast.com/

to install it export launchers java home directory, or open installer in binary and edit it inside
cd ~/Downloads
chmod +x FTBA_unix_<version, 202211151621-329441ed6d-release>.sh

you need to have java 17 installed
./FTBA_unix_<version, 202211151621-329441ed6d-release>.sh

if it doesn't detect jdk, export variable set to its location
export INSTALL4J_JAVA_HOME_OVERRIDE=/usr/lib/jvm/jdk-<version of 17, 17.0.5>

download curseforge cli, look in releases
https://github.com/North-West-Wind/CurseForge-CLI
download curseforge.zip
chmod +x curseforge
./curseforge help, displays all commands

to search curseforge modpacks fast
https://superstormer.github.io/cf-search/

check "Show project ID", from bottom of left sidebar
this id is needed when downloading modpack from curseforge cli
to search modpack, change upper left corner button to "Modpacks"

installing modpacks
~~~~~~~~~~~~~~~~
curseforge cli
install curseforge modpacks

./curseforge modpack install <modpack id>
cd curseforge-cli/modpack/<modpack>
cat manifest.json, find minecraft and forge version

super
MultiMC
Add Instance
set name as <modpack> and download and set icon from curseforge modpack page to launcher instance by instance and then its icon
pick Vanilla, pick minecraft version, OK
click instance, Edit Instance
Version, Install Forge, pick forge version, OK
minecraft 1.17 and above requires java 16 or above and minecraft 1.18 and above require java 17 and above
Settings, pick correct Java installation
Version, Open .minecraft, delete all folders inside

copy all files from curseforge modpack except <modpack>.zip into multimc instance .minecraft folder
you can delete curseforge modpack download now if you want
~~~~~~~~~~~~~~~~
ftb app
install curseforge and ftb modpacks

super
FTBApp, Browse, download <modpack>
super
MultiMC, Add Instance, FTB App Import, pick your <modpack>
Edit Instance, Settings, change java version if necessary

you can delete ftb instance now if you want
~~~~~~~~~~~~~~~~
technic app
https://www.technicpack.net/
chmod +x TechnicLauncher.jar
you need java 8 installed, add it to PATH
JAVA8_HOME=<path to java 8>
export PATH="$JAVA8_HOME/bin:$PATH"
java -jar TechnicLauncher.jar

install technic mods

you can run the app, but you can install them from multimc directly
super
MultiMC, Add Instance, Technic, pick <modpack> download
~~~~~~~~~~~~~~~~

increase ftb app download speed
super
FTBApp, Settings, Downloads
Download threads, set to logical cores
this allows it to download faster than curseforge
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slay the spire mods

download java 8, check programs section

download ModTheSpire from steam workshop, check steamcmd from programs section
cp ModTheSpire.jar <game folder>
cd <game folder>
mkdir mods
download your mods
cp <mod list> mods

run
export PATH="<path to java 8 bin folder>:$PATH"
java -jar ModTheSpire.jar

you can create executable and replace it in .desktop file to automatically run with mods
cd <game folder>
vim run_with_mods.sh, add
"
#!/bin/bash

JAVA8_HOME=<path to java 8>
export PATH="$JAVA8_HOME/bin:$PATH"

cd <game folder>
java -jar ModTheSpire.jar
"

chmod +x run_with_mods.sh

vim ~/.local/share/applications/Slay\ the\ Spire.desktop
Exec, edit "run.sh" to "run_with_mods.sh"
logout and login
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
access bitlocker enabled windows partition

sudo apt install dislocker
sudo mkdir /media/bitlocker
sudo mkdir /media/bitlockermount
lsblk, find windows partition with bitlocker enabled

sudo dislocker /dev/<windows partition with bitlocker enabled, sda2> -u<password> -- /media/bitlocker
sudo mount -o loop /media/bitlocker/dislocker-file /media/bitlockermount

if you omit <password>, you will type it interactively and it will be hidden, this is the correct way
to decrypt, otherwise <password> will have leaked through the terminal in plain text
only type the password after "-u" if the command is being used in a script like /etc/fstab for automatic mounting

to unmount partition
sudo umount /media/bitlockermount
sudo umount /media/bitlocker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
deprecated

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
virtualbox

sudo vim /etc/apt/sources.list, add
"deb http://deb.debian.org/debian bullseye-backports main"

sudo apt update
sudo apt install fasttrack-archive-keyring
sudo vim /etc/apt/sources.list, add
"
deb https://fasttrack.debian.net/debian-fasttrack/ bullseye-fasttrack main contrib
deb https://fasttrack.debian.net/debian-fasttrack/ bullseye-backports-staging main contrib
"

sudo apt update
sudo apt install virtualbox virtualbox-ext-pack virtualbox-guest-x11
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create windows 10 virtual machine in virtualbox

download windows 10 iso
super
VirtualBox
New
"Name", set to "windows 10"
"Version", pick to "Windows 10 (64-bit)"
if you have more memory, set memory to 4096
pick "Create a virtual hard disk now"
pick "VDI (VirtualBox Disk Image)"
pick "Dynamically allocated"
you can reduce storage, but not under 30 gb
Settings
if you have a good cpu
System
Processor
set processor to 4 CPUs 
Storage
click on Empty drive, Optical Drive should be "SATA Port 1"
click disk button next to it
pick "Choose a disk file..."
pick windows10.iso
start virtual machine, install windows 10
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slypeforlinux (check if first solution works and auto adds skype stable repo in /etc/apt/sources.list.d/)

https://www.skype.com/en/get-skype/
click "Get Skype for Linux DEB"
cd ~/Downloads
sudo apt install ./skypeforlinux-64.deb
sudo apt update

curl https://repo.skype.com/data/SKYPE-GPG-KEY | sudo apt-key add -
echo "deb https://repo.skype.com/deb stable main" | sudo tee -a /etc/apt/sources.list.d/skype.list
sudo apt update
sudo apt install skypeforlinux
sudo rm /etc/apt/sources.list.d/skype.list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
problems

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
network manager is not configuring network interfaces properly / networking.service failed

sudo vim /etc/network/interfaces, then /etc/network/interfaces.d/setup
remove all lines with interfaces except "lo"
sudo reboot

systemctl --failed
output should be
"
  UNIT LOAD ACTIVE DESCRIPTION
0 loaded units listed.
"
systemctl is-system-running
output should be
"running"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
casper-md5check.service failed

sudo systemctl disable casper-md5check.service
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
strange behaviours with programs which are under new mount point

make it owned by your user instead of root
whoami, your username
sudo chown -R <username>: /media/storage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
untrusted stored key

W: <repo url> Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION
section in apt-key(8) for details.

sudo apt-key list
sudo apt-key export <last 8 characters of pub code together without space> | sudo gpg --dearmour -o /usr/share/keyrings/<key>.gpg
sudo vim /etc/apt/sources.list.d/<repo>.list
after "deb" add "[signed-by=/usr/share/keyrings/<key>.gpg]"
it should be "deb [signed-by=/usr/share/keyrings/<key>.gpg] <repo url> <suites> <components>"
sudo apt update
sudo apt-key del <last 8 characters of pub code together no space>

if sources list is changed after sudo apt update / upgrade / autoremove
sudo chattr +i /etc/apt/sources.list.d/<repo>.list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
no available public key

W: GPG error: http://www.deb-multimedia.org jessie InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 5C808C2B65558117
E: The repository 'http://www.deb-multimedia.org jessie InRelease' is not signed.
N: Updating from such a repository can't be done securely, and is therefore disabled by default.

~~~~~~~~~~~~~~~~
solution 1

sudo vim /etc/apt/sources.list.d/<repo>.list
add "[trusted=yes]" after "deb" so it looks like "deb [trusted=yes] <repo link> <distribution> <branch>"
~~~~~~~~~~~~~~~~
solution 2

sudo vim /etc/apt/sources.list.d/<repo>.list
add "[arch=amd64]" after "deb" so it looks like "deb [arch=amd64] <repo link> <distribution> <branch>"
~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
after wine install you don't have Open With Wine Windows Program Loader in applications launch menu

sudo ln -s /usr/share/doc/wine/examples/wine.desktop /usr/share/applications
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ram doesn't show in devices in openrgb

sudo vim /etc/default/grub
add to GRUB_CMDLINE_LINUX_DEFAULT "acpi_enforce_resources=lax"
sudo update-grub
sudo reboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
certificate errors
"ERROR: The certificate of <url> is not trusted / hasn't got a known issuer."

~~~~~~~~~~~~~~~~
solution 1

if your system time isn't valid

sudo apt install ntpdate
sudo ntpdate pool.ntp.org
sudo hwclock --systohc --utc

your hardware clock should be utc, and the system should adapt it's timezone to it

if you have windows for dual booting (which causes the problem in the first place)
add dword registry "RealTimeIsUniversal" set to 1 in "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation" 
~~~~~~~~~~~~~~~~
solution 2
sudo apt install ca-certificates
or when using wget add flag --no-check-certificate
~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
usb device doesn't show in windows 10 in virtual box

make sure the drive is ntfs formatted, don't mount it in the host system
format the drive
sudo fdisk /dev/sda
d, untill there are no partitions
g
w
sudo fdisk /dev/sda
n
t
11, for ntfs partition type
w
sudo mkfs.ntfs /dev/sda1

whoami, that is your username
sudo usermod -aG vboxusers <username>
sudo reboot
Super
VirtualBox
Settings
USB
USB Device Filters
second icon on right is the one to add one usb device
you can also click the first one to add a filter that enables all usb devices
to be used inside the virtual machine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
remote ssh machine doesn't have ssh-agent on

when connecting remotely with ssh, ssh-agent on other machine doesn't start automatically
to turn it on
eval `ssh-agent`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
after wine install pdf files don't open properly

super
Default Application
Others
search "pdf"
"application/pdf", set to "Atril Document Viewer"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
package can't build from package, because some tests fail

solution 1

go to source folder
sudo vim <file that test fails in>, for each failed test
comment the test out with "
build again

solution 2

if you are building with debhelper
go to source folder
sudo vim Makefile
add "DEB_BUILD_OPTIONS += nocheck"
build again
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mount doesn't mount with full permissions (read-only) ntfs drives, windows operating systems also

boot into windows
windows button, Control Panel, Hardware and Sound, Power Options, System Settings, click "Change settings that are currently unavailable"
uncheck "Turn on fast start-up (recommended)"
Save changes
open terminal
shutdown /s /t 0
wait for the pc to turn off without forcing it to shutdown or restart

if the problems persists
boot into windows
open terminal as administrator
powercfg /h off
shutdown /s /t 0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
problems with games who need parameters passed, like games which don't start under dx12 and need to force dx11

Lutris
add game to lutris, if it's already there skip this step
click plus button top right corner, Add locally installed game
Game info, "Name" set game name
"Runner", pick "Wine (Runs Windows games)"

config the game to use parameters through lutris
Game options, "Executable" set to game .exe file, "Arguments" add parameters (my case I added -dx11)
Runner options, "Wine version" set to lutris version, if it fails try other versions
System options, "Default installation folder" set to installation folder of game
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lutris

if install doesn't work
sudo apt download lutris
sudo dpkg -i ./<lutris package name>

if that version of lutris doesn't work or has dependency problems, you can download a different one until it works
https://github.com/lutris/lutris/releases

if running game doesn't work, change wine version
super
Lutris
left click on game, Configure, Runner options, "Wine version" pick different version until game runs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
software icon doesn't show in application finder after building from source

find where software icons are and choose one, for me it's /usr/share/icons/hicolor/256x256/apps/<software>.svg
sudo vim <location of software .desktop file, /usr/share/applications/<software>.desktop>
change "Icon" to "Icon=/usr/share/icons/hicolor/256x256/apps/<software>.svg"

logout and login
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
wsl

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dns resolution failed

sudo vim /etc/wsl.conf, add
"
[network]
generateResolvConf = false
"

sudo vim /etc/resolv.conf, add
"
# google
nameserver 8.8.8.8
nameserver 8.8.4.4
"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ssl verification failed

open zscaler.com, click address bar key icon, click view certificate, click copy to file
"Select the format you want to use", set to Base-64 encoded X.509 (.CER)
after downloading all certificates change extensions from ".cer" to ".crt"

sudo mv <certificates> /usr/local/share/ca-certificates/
sudo update-ca-certificates --fresh
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------------------------------------
